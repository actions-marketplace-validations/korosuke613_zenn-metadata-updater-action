name: 'CI'
on: # rebuild any PRs and main branch changes
  pull_request

jobs:
  build-package: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version-file: .node-version
          cache: npm

      - run: npm ci
      - run: npm run build-package
      - name: Check that the build file has been committed.
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "OK, workspace is clean"
          else
            echo "Failed, workspace is not clean"
            exit 1
          fi

  test-lint: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version-file: .node-version
          cache: npm

      - run: npm ci
      - run: npm run test-lint
      - name: Upload test report
        if: ${{ always() }}
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/reports/jest.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  use-with-dry-run: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # Because if `fetch-depth >= 2` is not set, unchanged files will be updated.
      - run: "git log -m -1 --name-only --pretty=format: HEAD"
      - run: "git log -m -1 --name-only HEAD"
      - run: "touch .dirty"
      - uses: ./
        with:
          published: true
          force-push: true
          dry-run: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

  use: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # Because if `fetch-depth >= 2` is not set, unchanged files will be updated.
      - run: "git log -m -1 --name-only --pretty=format: HEAD"
      - run: "git log -m -1 --name-only HEAD"
      - uses: ./
        with:
          published: true
          force-push: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
